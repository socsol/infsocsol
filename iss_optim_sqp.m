function Optimizer = SelectOptimizer(StochasticProblem, A, b, Aeq, ...
                                     beq, ControlLB, ControlUB, ...
                                     UserConstraintFunctionFile, ...
                                     DeltaFunction, StageReturnFunction, ...
                                     StateLB, StateStepSize,TimeStep, ...
                                     DiscountFactor, Dimension, ...
                                     States,CodingVector, Noise, ...
                                     NoiseSteps,NoiseProb,NoisyVars)

%% Incorporate user constraints
[UserConstraintFunction, UserConstraintFunctionFile] = ...
    SetupUserConstraintFunction(StochasticProblem, UserConstraintFunctionFile);

if (exist('fmincon', 'file'))
  
  % Setup fmincon
  fminconOptions = SetupFmincon(ControlDimension, Options);
  
  Optimizer = @FminminDetOptim;
  else
    Optimizer = @FminminStochOptim;
  end
elseif (exist('sqp', 'file'))
  if StochasticProblem

  else
    
  end
end
  
    @(UStart, StateVect, StateVars, Value) ...
                 fmincon('CostStoch',UStart,A,b,Aeq,beq,...
                         ControlLB,ControlUB,UserConstraintFunctionFile,...
                         fminconOptions,DeltaFunction,StageReturnFunction,...
                         UserConstraintFunction,StateLB,StateStepSize,TimeStep,...
                         DiscountFactor,Dimension,States,CodingVector,StateVars,...
                         Value,...
                         Noise,NoiseSteps,NoiseProb,NoisyVars);
  else
    Optimizer = @(UStart, StateVect, StateVars, Value) ...
                 fmincon('CostDeter',UStart,A,b,Aeq,beq,...
                         ControlLB,ControlUB,UserConstraintFunctionFile,...
                         fminconOptions,DeltaFunction,StageReturnFunction,...
                         UserConstraintFunction,StateLB,StateStepSize,TimeStep,...
                         DiscountFactor,Dimension,States,CodingVector,StateVars,...
                         Value);
  end

  G = @(x) SqpG(x, Aeq, beq, UserConstraintFunction);
  H = @(x) SqpH(x, A, b, UserConstraintFunction);
  if StochasticProblem
    Optimizer = @(UStart, StateVect, StateVars, Value) ...
                 sqp(UStart, @(U) CostStoch(U,DeltaFunction,StageReturnFunction,...
                                            UserConstraintFunction,StateLB,StateStepSize,TimeStep,...
                                            DiscountFactor,Dimension,States,CodingVector,StateVars,...
                                            Value), ...
                     G, H, ControlLB, ControlUB, ...
                     optimget(fminconOptions, 'MaxIter'), ...
                     optimget(fminconOptions, 'TolX'));
  else
    Optimizer = @(UStart, StateVect, StateVars, Value) ...
                 sqp(UStart, @(U) CostDeter(U,DeltaFunction,StageReturnFunction,...
                                            UserConstraintFunction,StateLB,StateStepSize,TimeStep,...
                                            DiscountFactor,Dimension,States,CodingVector,StateVars,...
                                            Value), ...
                     G, H, ControlLB, ControlUB, ...
                     optimget(fminconOptions, 'MaxIter'), ...
                     optimget(fminconOptions, 'TolX'));
  end
else
  error("neither fmincon nor sqp could be found");
end
